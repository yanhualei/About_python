import copy

"""
应用范围：
    1.切片可以应用于：列表、元组、字符串，但是不能用于字典。
    2.深浅拷贝，既可以用于序列(列表、元组字符串)，也可以用于字典。
"""
"""
深浅拷贝的作用：
    1. 减少内存的使用
    2.在做数据清洗、修改或者入库的时候，对原数据复制一份进行操作，以防止数据修改之后，找不到源数据了
"""
a = [11, 22,[33,44]]

print("原对象a的id:%s"%id(a))

c=a
print("1.赋值：%s\tid:%s" % (c,id(c)))

d = copy.copy(a)
print("2.浅拷贝copy()：%s\tid:%s"%(d, id(d)))

e = copy.deepcopy(a)
print("3.深拷贝copy.deepcopy()：%s\tid:%s"%(e, id(e)))


#   测试深拷贝
# 改变a的值
a.append(55)
print('原对象的值增加元素55')
print('赋值:',c)
print('浅拷贝',d)
print("深拷贝",e)


a[2].append(66)
print('--------------')
print('浅拷贝:',d)
print('深拷贝:',e)


"""
结论:
直接赋值：其实就是对象的引用（别名）。

浅拷贝(copy)：拷贝父对象，不会拷贝对象的内部的子对象。也就是说,新对象的子对象是个引用,改变原对象的子对象,拷贝过来的新对象也会随之改变。

深拷贝(deepcopy)：完全拷贝了父对象及其子对象，也就是说拷贝过来的新对象没有任何引用。
"""